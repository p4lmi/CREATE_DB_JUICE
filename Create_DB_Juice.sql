-- criando base de dados
CREATE DATABASE [DB JUICE]
ON (
NAME = 'DB_JUICE_DAT',
FILENAME = 'C:\Users\MATHEUS\Desktop\Analise_de_dados\DB_JUICE.MDF',
SIZE = 10,
MAXSIZE = 50,
FILEGROWTH = 5)

LOG ON (
NAME = 'DB_JUICE_LOG',
FILENAME = 'C:\Users\MATHEUS\Desktop\Analise_de_dados\DB_JUICE.LDF',
SIZE = 10,
MAXSIZE = 50,
FILEGROWTH = 5);

-- criando tabelas
CREATE TABLE PRODUTOS
(
CODIGO VARCHAR(10) NOT NULL, DESCRITOR VARCHAR(100) NULL, SABOR VARCHAR(50) NULL, TAMANHO VARCHAR(50) NULL, EMBALAGEM VARCHAR(50) NULL, PRECO_LISTA FLOAT NULL,
PRIMARY KEY (CODIGO));

CREATE TABLE VENDEDORES
(
MATRICULA VARCHAR(5) NOT NULL, NOME VARCHAR(100) NULL, BAIRRO VARCHAR(50) NULL, COMISSAO FLOAT NULL, DATA_ADMISSAO DATE NULL, FERIAS BIT NULL,
PRIMARY KEY (MATRICULA));

CREATE TABLE CLIENTES
(
CPF VARCHAR(11) NOT NULL, NOME VARCHAR(100) NULL, ENDERECO VARCHAR(100) NULL, BAIRRO VARCHAR(50) NULL, CIDADE VARCHAR(50) NULL, ESTADO VARCHAR(50) NULL,
CEP VARCHAR(8) NULL, DATA_NASCIMENTO DATE NULL, IDADE INTEGER NULL, GENERO VARCHAR(1) NULL, LIMITE_CREDITO FLOAT, VOLUME_COMPRA FLOAT, PRIMEIRA_COMPRA BIT,
PRIMARY KEY (CPF));

-- criando tabelas de vendas
CREATE TABLE TABELA_DE_VENDAS
(
NUMERO VARCHAR(5) NOT NULL, DATA_VENDA DATE NOT NULL, CPF VARCHAR(11) NOT NULL, MATRICULA VARCHAR(11) NOT NULL, IMPOSTO FLOAT NULL,
PRIMARY KEY (NUMERO));

--relacionando a tabela de vendas com a tabela de clientes
ALTER TABLE TABELA_DE_VENDAS
ADD CONSTRAINT FK_CLIENTES
FOREIGN KEY (CPF) REFERENCES CLIENTES(CPF);

--alterando coluna na tabela de vendas
ALTER TABLE TABELA_DE_VENDAS
ALTER COLUMN MATRICULA VARCHAR (5) NOT NULL;


--relacionando a tabela de vendas com a tabela de vendedores
ALTER TABLE TABELA_DE_VENDAS
ADD CONSTRAINT FK_VENDEDORES
FOREIGN KEY (MATRICULA) REFERENCES VENDEDORES(MATRICULA);

-- crianto tabela de itens vendidos
CREATE TABLE TABELA_DE_ITENS_VENDIDOS
(
NUMERO VARCHAR(5) NOT NULL, CODIGO VARCHAR(10) NOT NULL, QUANTIDADE FLOAT NULL, PRECO FLOAT NULL,
PRIMARY KEY (NUMERO, CODIGO)
);

ALTER TABLE TABELA_DE_ITENS_VENDIDOS
ADD CONSTRAINT FK_TABELA_DE_VENDAS
FOREIGN KEY (NUMERO) REFERENCES TABELA_DE_VENDAS(NUMERO);

ALTER TABLE TABELA_DE_ITENS_VENDIDOS
ADD CONSTRAINT FK_PRODUTOS
FOREIGN KEY (CODIGO) REFERENCES PRODUTOS(CODIGO);

-- inserindo valores naa tabela produtos
insert into PRODUTOS
(CODIGO, DESCRITOR, SABOR, TAMANHO, EMBALAGEM, PRECO_LISTA)
VALUES
('1040107', 'Light - 350 ml - Melancia', 'Melancia', '350 ml', 'Lata', 4.56),
('1040108', 'Light - 350 ml - Graviola', 'Graviola', '350 ml', 'Lata', 4.00),
('1040109', 'Light - 350 ml - Açai', 'Açai', '350 ml', 'Lata', 5.60),
('1040110', 'Light - 350 ml - Jaca', 'JACA', '350 ml', 'Lata', 3.50),
('1040111', 'Light - 350 ml - Manga', 'Manga', '350 ml', 'Lata', 3.20),
('1040112', 'Light - 350 ml - Maça', 'Maça', '350 ml', 'Lata', 3.50);

-- extraindo informações de outro banco de dados
SELECT * FROM SUCOS_FRUTAS.dbo.TABELA_DE_PRODUTOS

INSERT INTO PRODUTOS SELECT CODIGO_DO_PRODUTO AS CODIGO, NOME_DO_PRODUTO AS DESCRITOR, SABOR, TAMANHO, EMBALAGEM, PRECO_DE_LISTA AS PRECO_LISTA
FROM SUCOS_FRUTAS.dbo.TABELA_DE_PRODUTOS
WHERE CODIGO_DO_PRODUTO <> '1040107';

-- extraindo clientes de outro banco de dados e adicionando a DB JUICE
INSERT INTO CLIENTES
SELECT CPF, NOME, ENDERECO_1 AS ENDERECO, BAIRRO, CIDADE, ESTADO, CEP, 
DATA_DE_NASCIMENTO AS DATA_NASCIMENTO, IDADE, 
GENERO, LIMITE_DE_CREDITO AS LIMITE_CREDITO, VOLUME_DE_COMPRA AS VOLUME_COMPRA, PRIMEIRA_COMPRA
FROM SUCOS_FRUTAS.DBO.TABELA_DE_CLIENTES;


-- inserindo dados de arquivos externos (csv)
/* 1 - clicar no banco de dados(DB JUICE) com o botão direito, ir em "Tarefas" e clicar em importar dados.
   2 - clicar em Flat file source
   3 - procurar o arquivo vendedores.csv e ajustar as especificações de formato(delimitado), qualificador de texto(none), delimiatdor de linha (CRLF)...
   4 - configurar o destino do arquivo (Microsoft Provider for SQL Server)
   5 - relacionar os nomes das colunas do csv com o nome das colunas das tabelas*/
  
  -- alterando produtos
SELECT * FROM PRODUTOS;
UPDATE PRODUTOS
SET PRECO_LISTA = 5
WHERE CODIGO = '1040107';

SELECT * FROM PRODUTOS
WHERE SABOR = 'Manga'

UPDATE PRODUTOS
SET PRECO_LISTA = PRECO_LISTA * 1.10
WHERE SABOR = 'Manga';

-- alterando partes de textos dentro da descrição
SELECT DESCRITOR FROM PRODUTOS
WHERE TAMANHO = '550 ml';

SELECT DESCRITOR, REPLACE(DESCRITOR, '350 ml', '550 ml') FROM PRODUTOS
WHERE TAMANHO = '350 ml';

UPDATE PRODUTOS SET DESCRITOR = REPLACE(DESCRITOR, '350 ml', '550 ml'), TAMANHO = '550 ml'
WHERE TAMANHO = '350 ml';

--alterando endereço de cliente
UPDATE CLIENTES
SET [ENDERECO] = 'R. Jorge Emilio 23',
    [BAIRRO] = 'Santo Amaro',
    [CIDADE] = 'São Paulo',
    [ESTADO] = 'SP',
    [CEP] = '8833223'
WHERE [CPF] = '19290992743'

-- sincronizando duas tabelas (sincronizar os preços da base db juice com os preços da base sucos_frutas)
SELECT * FROM PRODUTOS ORDER BY CODIGO

SELECT * FROM SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS ORDER BY CODIGO_DO_PRODUTO

UPDATE SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS
SET PRECO_DE_LISTA = PRECO_DE_LISTA * 1.20

SELECT
A.CODIGO AS CODIGO_MINHA_TABELA, A.PRECO_LISTA AS PRECO_MINHA_TABELA, CODIGO_DO_PRODUTO AS CODIGO_TABELA_APOIO, B.PRECO_DE_LISTA AS PRECO_TABELA_APOIO
FROM PRODUTOS A
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B
	ON A.CODIGO = B.CODIGO_DO_PRODUTO

UPDATE A
SET A.PRECO_LISTA = B.PRECO_DE_LISTA
FROM PRODUTOS A
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B
	ON A.CODIGO = B.CODIGO_DO_PRODUTO;

-- sincronizando usando MERGE
UPDATE SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS
SET PRECO_DE_LISTA = PRECO_DE_LISTA * 1.20

SELECT
A.CODIGO AS CODIGO_MINHA_TABELA, A.PRECO_LISTA AS PRECO_MINHA_TABELA, CODIGO_DO_PRODUTO AS CODIGO_TABELA_APOIO, B.PRECO_DE_LISTA AS PRECO_TABELA_APOIO
FROM PRODUTOS A
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B
	ON A.CODIGO = B.CODIGO_DO_PRODUTO

MERGE INTO PRODUTOS A
USING SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B
ON A.CODIGO = B.CODIGO_DO_PRODUTO
WHEN MATCHED THEN
UPDATE SET A.PRECO_LISTA = B.PRECO_DE_LISTA;
